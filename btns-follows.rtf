  @@default_timezone                @@time_zone_aware_attributes
  @@dump_schema_after_migration     @@timestamped_migrations
  @@dump_schemas                    @@verbose_query_logs
  @@error_on_ignored_order          @@warn_on_records_fetched_greater_than
  @@index_nested_attribute_errors   @@writing_role
  @@logger
locals: _  __  _dir_  _ex_  _file_  _in_  _out_  pry_instance
(END)
  location_changed?                       updated_at_change_to_be_saved
  location_in_database                    updated_at_changed?
  location_previous_change                updated_at_in_database
  location_previously_changed?            updated_at_previous_change
  location_was                            updated_at_previously_changed?
  location_will_change!                   updated_at_was
  origin                                  updated_at_will_change!
  origin=                                 will_save_change_to_DOB?
  origin?                                 will_save_change_to_biography?
  origin_before_last_save                 will_save_change_to_created_at?
  origin_before_type_cast                 will_save_change_to_email?
  origin_came_from_user?                  will_save_change_to_encrypted_password?
  origin_change                           will_save_change_to_id?
  origin_change_to_be_saved               will_save_change_to_location?
  origin_changed?                         will_save_change_to_origin?
  origin_in_database                      will_save_change_to_remember_created_at?
  origin_previous_change                  will_save_change_to_reset_password_sent_at?
  origin_previously_changed?              will_save_change_to_reset_password_token?
  origin_was                              will_save_change_to_updated_at?
User::GeneratedAssociationMethods#methods: follow_ids  follow_ids=  follows  follows=
Devise::Models::Authenticatable#methods:
  active_for_authentication?  inspect            unauthenticated_message
  inactive_message            serializable_hash  valid_for_authentication?
Devise::Models::DatabaseAuthenticatable#methods:
  after_database_authentication    send_password_change_notification
  authenticatable_salt             skip_email_changed_notification!
  clean_up_passwords               skip_password_change_notification!
  destroy_with_password            update_with_password
  password=                        update_without_password
  send_email_changed_notification  valid_password?
Devise::Models::Rememberable#methods:
  after_remembered        forget_me!           remember_me   remember_me=  rememberable_options
  extend_remember_period  remember_expires_at  remember_me!  remember_me?  rememberable_value
Devise::Models::Recoverable#methods:
  reset_password  reset_password_period_valid?  send_reset_password_instructions
User#methods:
  after_add_for_follows                    before_remove_for_follows
  after_add_for_follows=                   before_remove_for_follows=
  after_add_for_follows?                   before_remove_for_follows?
  after_remove_for_follows                 current_password
  after_remove_for_follows=                devise_modules
  after_remove_for_follows?                devise_modules?
  autosave_associated_records_for_follows  password
  before_add_for_follows                   password_confirmation
  before_add_for_follows=                  password_confirmation=
  before_add_for_follows?                  validate_associated_records_for_follows
self.methods: __pry__
instance variables:
  @_start_transaction_state  @destroyed                 @new_record   @transaction_state
  @association_cache         @destroyed_by_association  @primary_key
  @attributes                @marked_for_destruction    @readonly
class variables:
  @@allow_unsafe_raw_sql            @@maintain_test_schema
  @@belongs_to_required_by_default  @@primary_key_prefix_type
  @@configurations                  @@reading_role
  @@connection_handlers             @@schema_format
  @@default_timezone                @@time_zone_aware_attributes
  @@dump_schema_after_migration     @@timestamped_migrations
  @@dump_schemas                    @@verbose_query_logs
  @@error_on_ignored_order          @@warn_on_records_fetched_greater_than
  @@index_nested_attribute_errors   @@writing_role
  @@logger
locals: _  __  _dir_  _ex_  _file_  _in_  _out_  pry_instance
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
(END)
  location_changed?                       updated_at_change_to_be_saved
  location_in_database                    updated_at_changed?
  location_previous_change                updated_at_in_database
  location_previously_changed?            updated_at_previous_change
  location_was                            updated_at_previously_changed?
  location_will_change!                   updated_at_was
  origin                                  updated_at_will_change!
  origin=                                 will_save_change_to_DOB?
  origin?                                 will_save_change_to_biography?
  origin_before_last_save                 will_save_change_to_created_at?
  origin_before_type_cast                 will_save_change_to_email?
  origin_came_from_user?                  will_save_change_to_encrypted_password?
  origin_change                           will_save_change_to_id?
  origin_change_to_be_saved               will_save_change_to_location?
  origin_changed?                         will_save_change_to_origin?
  origin_in_database                      will_save_change_to_remember_created_at?
  origin_previous_change                  will_save_change_to_reset_password_sent_at?
  origin_previously_changed?              will_save_change_to_reset_password_token?
  origin_was                              will_save_change_to_updated_at?
User::GeneratedAssociationMethods#methods: follow_ids  follow_ids=  follows  follows=
Devise::Models::Authenticatable#methods:
  active_for_authentication?  inspect            unauthenticated_message
  inactive_message            serializable_hash  valid_for_authentication?
Devise::Models::DatabaseAuthenticatable#methods:
  after_database_authentication    send_password_change_notification
  authenticatable_salt             skip_email_changed_notification!
  clean_up_passwords               skip_password_change_notification!
  destroy_with_password            update_with_password
  password=                        update_without_password
  send_email_changed_notification  valid_password?
Devise::Models::Rememberable#methods:
  after_remembered        forget_me!           remember_me   remember_me=  rememberable_options
  extend_remember_period  remember_expires_at  remember_me!  remember_me?  rememberable_value
Devise::Models::Recoverable#methods:
  reset_password  reset_password_period_valid?  send_reset_password_instructions
User#methods:
  after_add_for_follows                    before_remove_for_follows
  after_add_for_follows=                   before_remove_for_follows=
  after_add_for_follows?                   before_remove_for_follows?
  after_remove_for_follows                 current_password
  after_remove_for_follows=                devise_modules
  after_remove_for_follows?                devise_modules?
  autosave_associated_records_for_follows  password
  before_add_for_follows                   password_confirmation
  before_add_for_follows=                  password_confirmation=
  before_add_for_follows?                  validate_associated_records_for_follows
self.methods: __pry__
instance variables:
  @_start_transaction_state  @destroyed                 @new_record   @transaction_state
  @association_cache         @destroyed_by_association  @primary_key
  @attributes                @marked_for_destruction    @readonly
class variables:
  @@allow_unsafe_raw_sql            @@maintain_test_schema
  @@belongs_to_required_by_default  @@primary_key_prefix_type
  @@configurations                  @@reading_role
  @@connection_handlers             @@schema_format
  @@default_timezone                @@time_zone_aware_attributes
  @@dump_schema_after_migration     @@timestamped_migrations
  @@dump_schemas                    @@verbose_query_logs
  @@error_on_ignored_order          @@warn_on_records_fetched_greater_than
  @@index_nested_attribute_errors   @@writing_role
  @@logger
locals: _  __  _dir_  _ex_  _file_  _in_  _out_  pry_instance
(END)
  location_changed?                       updated_at_change_to_be_saved
  location_in_database                    updated_at_changed?
  location_previous_change                updated_at_in_database
  location_previously_changed?            updated_at_previous_change
  location_was                            updated_at_previously_changed?
  location_will_change!                   updated_at_was
  origin                                  updated_at_will_change!
  origin=                                 will_save_change_to_DOB?
  origin?                                 will_save_change_to_biography?
  origin_before_last_save                 will_save_change_to_created_at?
  origin_before_type_cast                 will_save_change_to_email?
  origin_came_from_user?                  will_save_change_to_encrypted_password?
  origin_change                           will_save_change_to_id?
  origin_change_to_be_saved               will_save_change_to_location?
  origin_changed?                         will_save_change_to_origin?
  origin_in_database                      will_save_change_to_remember_created_at?
  origin_previous_change                  will_save_change_to_reset_password_sent_at?
  origin_previously_changed?              will_save_change_to_reset_password_token?
  origin_was                              will_save_change_to_updated_at?
User::GeneratedAssociationMethods#methods: follow_ids  follow_ids=  follows  follows=
Devise::Models::Authenticatable#methods:
  active_for_authentication?  inspect            unauthenticated_message
  inactive_message            serializable_hash  valid_for_authentication?
Devise::Models::DatabaseAuthenticatable#methods:
  after_database_authentication    send_password_change_notification
  authenticatable_salt             skip_email_changed_notification!
  clean_up_passwords               skip_password_change_notification!
  destroy_with_password            update_with_password
  password=                        update_without_password
  send_email_changed_notification  valid_password?
Devise::Models::Rememberable#methods:
  after_remembered        forget_me!           remember_me   remember_me=  rememberable_options
  extend_remember_period  remember_expires_at  remember_me!  remember_me?  rememberable_value
Devise::Models::Recoverable#methods:
  reset_password  reset_password_period_valid?  send_reset_password_instructions
User#methods:
  after_add_for_follows                    before_remove_for_follows
  after_add_for_follows=                   before_remove_for_follows=
  after_add_for_follows?                   before_remove_for_follows?
  after_remove_for_follows                 current_password
  after_remove_for_follows=                devise_modules
  after_remove_for_follows?                devise_modules?
  autosave_associated_records_for_follows  password
  before_add_for_follows                   password_confirmation
  before_add_for_follows=                  password_confirmation=
  before_add_for_follows?                  validate_associated_records_for_follows
self.methods: __pry__
instance variables:
  @_start_transaction_state  @destroyed                 @new_record   @transaction_state
  @association_cache         @destroyed_by_association  @primary_key
  @attributes                @marked_for_destruction    @readonly
class variables:
  @@allow_unsafe_raw_sql            @@maintain_test_schema
  @@belongs_to_required_by_default  @@primary_key_prefix_type
  @@configurations                  @@reading_role
  @@connection_handlers             @@schema_format
  @@default_timezone                @@time_zone_aware_attributes
  @@dump_schema_after_migration     @@timestamped_migrations
  @@dump_schemas                    @@verbose_query_logs
  @@error_on_ignored_order          @@warn_on_records_fetched_greater_than
  @@index_nested_attribute_errors   @@writing_role
  @@logger
locals: _  __  _dir_  _ex_  _file_  _in_  _out_  pry_instance
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
(END)
  location_changed?                       updated_at_change_to_be_saved
  location_in_database                    updated_at_changed?
  location_previous_change                updated_at_in_database
  location_previously_changed?            updated_at_previous_change
  location_was                            updated_at_previously_changed?
  location_will_change!                   updated_at_was
  origin                                  updated_at_will_change!
  origin=                                 will_save_change_to_DOB?
  origin?                                 will_save_change_to_biography?
  origin_before_last_save                 will_save_change_to_created_at?
  origin_before_type_cast                 will_save_change_to_email?
  origin_came_from_user?                  will_save_change_to_encrypted_password?
  origin_change                           will_save_change_to_id?
  origin_change_to_be_saved               will_save_change_to_location?
  origin_changed?                         will_save_change_to_origin?
  origin_in_database                      will_save_change_to_remember_created_at?
  origin_previous_change                  will_save_change_to_reset_password_sent_at?
  origin_previously_changed?              will_save_change_to_reset_password_token?
  origin_was                              will_save_change_to_updated_at?
User::GeneratedAssociationMethods#methods: follow_ids  follow_ids=  follows  follows=
Devise::Models::Authenticatable#methods:
  active_for_authentication?  inspect            unauthenticated_message
  inactive_message            serializable_hash  valid_for_authentication?
Devise::Models::DatabaseAuthenticatable#methods:
  after_database_authentication    send_password_change_notification
  authenticatable_salt             skip_email_changed_notification!
  clean_up_passwords               skip_password_change_notification!
  destroy_with_password            update_with_password
  password=                        update_without_password
  send_email_changed_notification  valid_password?
Devise::Models::Rememberable#methods:
  after_remembered        forget_me!           remember_me   remember_me=  rememberable_options
  extend_remember_period  remember_expires_at  remember_me!  remember_me?  rememberable_value
Devise::Models::Recoverable#methods:
  reset_password  reset_password_period_valid?  send_reset_password_instructions
User#methods:
  after_add_for_follows                    before_remove_for_follows
  after_add_for_follows=                   before_remove_for_follows=
  after_add_for_follows?                   before_remove_for_follows?
  after_remove_for_follows                 current_password
  after_remove_for_follows=                devise_modules
  after_remove_for_follows?                devise_modules?
  autosave_associated_records_for_follows  password
  before_add_for_follows                   password_confirmation
  before_add_for_follows=                  password_confirmation=
  before_add_for_follows?                  validate_associated_records_for_follows
self.methods: __pry__
instance variables:
  @_start_transaction_state  @destroyed                 @new_record   @transaction_state
  @association_cache         @destroyed_by_association  @primary_key
  @attributes                @marked_for_destruction    @readonly
class variables:
  @@allow_unsafe_raw_sql            @@maintain_test_schema
  @@belongs_to_required_by_default  @@primary_key_prefix_type
  @@configurations                  @@reading_role
  @@connection_handlers             @@schema_format
  @@default_timezone                @@time_zone_aware_attributes
  @@dump_schema_after_migration     @@timestamped_migrations
  @@dump_schemas                    @@verbose_query_logs
  @@error_on_ignored_order          @@warn_on_records_fetched_greater_than
  @@index_nested_attribute_errors   @@writing_role
  @@logger
locals: _  __  _dir_  _ex_  _file_  _in_  _out_  pry_instance
(END)
Session Contents Restored on 5 Jun 2020 at 5:45 pm
Last login: Fri Jun  5 17:45:31 on ttys005
➜  artbythebrush git:(card-refinement) rails db:seed
reseting database
rails aborted!
NameError: uninitialized constant FollowedRelationship
/Users/henrylay/code/henry88lay/artbythebrush/db/seeds.rb:11:in `<main>'
/Users/henrylay/code/henry88lay/artbythebrush/bin/rails:9:in `<top (required)>'
/Users/henrylay/code/henry88lay/artbythebrush/bin/spring:15:in `<top (required)>'
./bin/rails:3:in `load'
./bin/rails:3:in `<main>'
Tasks: TOP => db:seed
(See full trace by running task with --trace)
➜  artbythebrush git:(card-refinement) rails db:seed
reseting database
creating users
➜  artbythebrush git:(card-refinement) ✗ git pull origin master
Enter passphrase for key '/Users/henrylay/.ssh/id_ed25519':
Enter passphrase for key '/Users/henrylay/.ssh/id_ed25519':
remote: Enumerating objects: 33, done.
remote: Counting objects: 100% (28/28), done.
remote: Compressing objects: 100% (9/9), done.
remote: Total 15 (delta 7), reused 10 (delta 5), pack-reused 0
Unpacking objects: 100% (15/15), done.
From github.com:DanielNguyen8/artbythebrush
 * branch            master     -> FETCH_HEAD
   c016181..801d53b  master     -> origin/master
Updating c016181..801d53b
Fast-forward
 .../stylesheets/pages/_home.scss      | 20 +++++---------
 app/views/pages/home.html.erb         | 11 ++++++--
 2 files changed, 15 insertions(+), 16 deletions(-)
➜  artbythebrush git:(card-refinement) ✗ git pull origin master
Enter passphrase for key '/Users/henrylay/.ssh/id_ed25519':
remote: Enumerating objects: 20, done.
remote: Counting objects: 100% (20/20), done.
remote: Compressing objects: 100% (18/18), done.
remote: Total 20 (delta 5), reused 5 (delta 0), pack-reused 0
Unpacking objects: 100% (20/20), done.
From github.com:DanielNguyen8/artbythebrush
 * branch            master     -> FETCH_HEAD
   801d53b..39e918e  master     -> origin/master
Updating 801d53b..39e918e
Fast-forward
 .../galleries_controller.rb           | 46 ++++++++++++++
 app/views/galleries/index.erb.html    |  1 +
 config/routes.rb                      |  2 +
 .../galleries_controller_test.rb      |  7 ++
 4 files changed, 56 insertions(+)
 create mode 100644 app/controllers/galleries_controller.rb
 create mode 100644 app/views/galleries/index.erb.html
 create mode 100644 test/controllers/galleries_controller_test.rb
➜  artbythebrush git:(card-refinement) ✗ git pull origin master
Enter passphrase for key '/Users/henrylay/.ssh/id_ed25519':
remote: Enumerating objects: 15, done.
remote: Counting objects: 100% (15/15), done.
remote: Compressing objects: 100% (9/9), done.
remote: Total 15 (delta 5), reused 10 (delta 5), pack-reused 0
Unpacking objects: 100% (15/15), done.
From github.com:DanielNguyen8/artbythebrush
 * branch            master     -> FETCH_HEAD
   39e918e..66a3170  master     -> origin/master
Updating 39e918e..66a3170
Fast-forward
 app/assets/stylesheets/pages/_home.scss | 7 +++++--
 app/views/pages/home.html.erb           | 8 ++++----
 2 files changed, 9 insertions(+), 6 deletions(-)
➜  artbythebrush git:(card-refinement) ✗ git checkout master
M db/seeds.rb
Switched to branch 'master'
Your branch is behind 'origin/master' by 7 commits, and can be fast-forwarded.
  (use "git pull" to update your local branch)
➜  artbythebrush git:(master) ✗ git sweep
Enter passphrase for key '/Users/henrylay/.ssh/id_ed25519':
Pruning origin
URL: git@github.com:DanielNguyen8/artbythebrush.git
 * [pruned] origin/gallery-crud-controller
➜  artbythebrush git:(master) ✗ git status
On branch master
Your branch is behind 'origin/master' by 7 commits, and can be fast-forwarded.
  (use "git pull" to update your local branch)

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
  modified:   db/seeds.rb

no changes added to commit (use "git add" and/or "git commit -a")
➜  artbythebrush git:(master) ✗ git checkout -b amend-seed
M db/seeds.rb
Switched to a new branch 'amend-seed'
➜  artbythebrush git:(amend-seed) ✗ git add db/seeds.rb
➜  artbythebrush git:(amend-seed) ✗ git commit -m "added the changes to fix up the seed"
[amend-seed 0f3c4b1] added the changes to fix up the seed
 1 file changed, 1 insertion(+), 1 deletion(-)
➜  artbythebrush git:(amend-seed) git push origin amend-seed
Enter passphrase for key '/Users/henrylay/.ssh/id_ed25519':
Enumerating objects: 7, done.
Counting objects: 100% (7/7), done.
Delta compression using up to 12 threads
Compressing objects: 100% (4/4), done.
Writing objects: 100% (4/4), 357 bytes | 357.00 KiB/s, done.
Total 4 (delta 3), reused 0 (delta 0)
remote: Resolving deltas: 100% (3/3), completed with 3 local objects.
remote:
remote: Create a pull request for 'amend-seed' on GitHub by visiting:
remote:      https://github.com/DanielNguyen8/artbythebrush/pull/new/amend-seed
remote:
To github.com:DanielNguyen8/artbythebrush.git
 * [new branch]      amend-seed -> amend-seed
➜  artbythebrush git:(amend-seed) git checkout master
Switched to branch 'master'
Your branch is behind 'origin/master' by 7 commits, and can be fast-forwarded.
  (use "git pull" to update your local branch)
➜  artbythebrush git:(master) git git pull origin master
WARNING: You called a Git command named 'git', which does not exist.
Continuing in 0.1 seconds, assuming that you meant 'init'.
usage: git init [-q | --quiet] [--bare] [--template=<template-directory>] [--shared[=<permissions>]] [<directory>]
➜  artbythebrush git:(master) git pull origin master
Enter passphrase for key '/Users/henrylay/.ssh/id_ed25519':
From github.com:DanielNguyen8/artbythebrush
 * branch            master     -> FETCH_HEAD
Updating c016181..66a3170
Fast-forward
 .../stylesheets/pages/_home.scss      | 23 +++----
 .../galleries_controller.rb           | 46 ++++++++++++++
 app/views/galleries/index.erb.html    |  1 +
 app/views/pages/home.html.erb         | 17 +++--
 config/routes.rb                      |  2 +
 .../galleries_controller_test.rb      |  7 ++
 6 files changed, 77 insertions(+), 19 deletions(-)
 create mode 100644 app/controllers/galleries_controller.rb
 create mode 100644 app/views/galleries/index.erb.html
 create mode 100644 test/controllers/galleries_controller_test.rb
➜  artbythebrush git:(master) rails c
Running via Spring preloader in process 18977
Loading development environment (Rails 6.0.3.1)
[1] pry(main)> Follow.all
  Follow Load (0.5ms)  SELECT "follows".* FROM "follows"
=> []
[2] pry(main)> Follow.create(fan: User.first, record: User.last)
  User Load (0.5ms)  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1  [["LIMIT", 1]]
  User Load (0.2ms)  SELECT "users".* FROM "users" ORDER BY "users"."id" DESC LIMIT $1  [["LIMIT", 1]]
   (0.1ms)  BEGIN
  Follow Create (5.5ms)  INSERT INTO "follows" ("record_type", "record_id", "fan_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["record_type", "User"], ["record_id", 6], ["fan_id", 3], ["created_at", "2020-06-06 01:20:58.617990"], ["updated_at", "2020-06-06 01:20:58.617990"]]
   (0.5ms)  COMMIT
=> #<Follow:0x00007fca9210a6f8
 id: 3,
 record_type: "User",
 record_id: 6,
 fan_id: 3,
 created_at: Sat, 06 Jun 2020 01:20:58 UTC +00:00,
 updated_at: Sat, 06 Jun 2020 01:20:58 UTC +00:00>
[3] pry(main)> Follow.create(fan: User.first, record: Tag.first)
  User Load (0.5ms)  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1  [["LIMIT", 1]]
  Tag Load (0.3ms)  SELECT "tags".* FROM "tags" ORDER BY "tags"."id" ASC LIMIT $1  [["LIMIT", 1]]
   (0.1ms)  BEGIN
  Follow Create (0.3ms)  INSERT INTO "follows" ("record_type", "record_id", "fan_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["record_type", "Tag"], ["record_id", 2], ["fan_id", 3], ["created_at", "2020-06-06 01:21:33.121360"], ["updated_at", "2020-06-06 01:21:33.121360"]]
   (0.3ms)  COMMIT
=> #<Follow:0x00007fca92342060
 id: 4,
 record_type: "Tag",
 record_id: 2,
 fan_id: 3,
 created_at: Sat, 06 Jun 2020 01:21:33 UTC +00:00,
 updated_at: Sat, 06 Jun 2020 01:21:33 UTC +00:00>
[4] pry(main)> first = User.first
  User Load (0.3ms)  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1  [["LIMIT", 1]]
=> #<User id: 3, email: "henry@gmail.com", created_at: "2020-06-06 00:19:07", updated_at: "2020-06-06 00:19:07", origin: nil, location: nil, biography: nil, DOB: nil>
[5] pry(main)> first.folows
NoMethodError: undefined method `folows' for #<User:0x00007fca923c2210>
Did you mean?  follows
               follows=
from /Users/henrylay/.rbenv/versions/2.6.6/lib/ruby/gems/2.6.0/gems/activemodel-6.0.3.1/lib/active_model/attribute_methods.rb:432:in `method_missing'
[6] pry(main)> first.follows
=> #<Follow::ActiveRecord_Associations_CollectionProxy:0x3fe549251818>
[7] pry(main)> first.fans
NoMethodError: undefined method `fans' for #<User:0x00007fca923c2210>
from /Users/henrylay/.rbenv/versions/2.6.6/lib/ruby/gems/2.6.0/gems/activemodel-6.0.3.1/lib/active_model/attribute_methods.rb:432:in `method_missing'
[8] pry(main)> reload!
Reloading...
=> true
[9] pry(main)> first.fans
NoMethodError: undefined method `fans' for #<User:0x00007fca923c2210>
from /Users/henrylay/.rbenv/versions/2.6.6/lib/ruby/gems/2.6.0/gems/activemodel-6.0.3.1/lib/active_model/attribute_methods.rb:432:in `method_missing'
[10] pry(main)> quit
➜  artbythebrush git:(master) ✗ rails c
Running via Spring preloader in process 19302
Loading development environment (Rails 6.0.3.1)
[1] pry(main)> first = User.first
  User Load (0.4ms)  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1  [["LIMIT", 1]]
=> #<User id: 3, email: "henry@gmail.com", created_at: "2020-06-06 00:19:07", updated_at: "2020-06-06 00:19:07", origin: nil, location: nil, biography: nil, DOB: nil>
[2] pry(main)> first.fans
  User Load (0.6ms)  SELECT "users".* FROM "users" INNER JOIN "follows" ON "users"."id" = "follows"."fan_id" WHERE "follows"."record_id" = $1 AND "follows"."record_type" = $2  [["record_id", 3], ["record_type", "User"]]
=> []
[3] pry(main)> User.last.fans
  User Load (0.3ms)  SELECT "users".* FROM "users" ORDER BY "users"."id" DESC LIMIT $1  [["LIMIT", 1]]
  User Load (0.3ms)  SELECT "users".* FROM "users" INNER JOIN "follows" ON "users"."id" = "follows"."fan_id" WHERE "follows"."record_id" = $1 AND "follows"."record_type" = $2  [["record_id", 6], ["record_type", "User"]]
=> [#<User id: 3, email: "henry@gmail.com", created_at: "2020-06-06 00:19:07", updated_at: "2020-06-06 00:19:07", origin: nil, location: nil, biography: nil, DOB: nil>]
[4] pry(main)> first.follows
  Follow Load (0.2ms)  SELECT "follows".* FROM "follows" WHERE "follows"."record_id" = $1 AND "follows"."record_type" = $2  [["record_id", 3], ["record_type", "User"]]
=> []
[5] pry(main)> Tag.first.follows
  Tag Load (0.3ms)  SELECT "tags".* FROM "tags" ORDER BY "tags"."id" ASC LIMIT $1  [["LIMIT", 1]]
  Follow Load (0.2ms)  SELECT "follows".* FROM "follows" WHERE "follows"."record_id" = $1 AND "follows"."record_type" = $2  [["record_id", 2], ["record_type", "Tag"]]
=> [#<Follow:0x00007ff8434944e8
  id: 4,
  record_type: "Tag",
  record_id: 2,
  fan_id: 3,
  created_at: Sat, 06 Jun 2020 01:21:33 UTC +00:00,
  updated_at: Sat, 06 Jun 2020 01:21:33 UTC +00:00>]
[6] pry(main)> User.first.follows
  User Load (0.4ms)  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1  [["LIMIT", 1]]
  Follow Load (0.2ms)  SELECT "follows".* FROM "follows" WHERE "follows"."record_id" = $1 AND "follows"."record_type" = $2  [["record_id", 3], ["record_type", "User"]]
=> []
[7] pry(main)> User.first.follows.first
  User Load (0.4ms)  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1  [["LIMIT", 1]]
  Follow Load (0.3ms)  SELECT "follows".* FROM "follows" WHERE "follows"."record_id" = $1 AND "follows"."record_type" = $2 ORDER BY "follows"."id" ASC LIMIT $3  [["record_id", 3], ["record_type", "User"], ["LIMIT", 1]]
=> nil
[8] pry(main)> Follow.all
  Follow Load (0.3ms)  SELECT "follows".* FROM "follows"
=> [#<Follow:0x00007ff842404ba0
  id: 3,
  record_type: "User",
  record_id: 6,
  fan_id: 3,
  created_at: Sat, 06 Jun 2020 01:20:58 UTC +00:00,
  updated_at: Sat, 06 Jun 2020 01:20:58 UTC +00:00>,
 #<Follow:0x00007ff842404a60
  id: 4,
  record_type: "Tag",
  record_id: 2,
  fan_id: 3,
  created_at: Sat, 06 Jun 2020 01:21:33 UTC +00:00,
  updated_at: Sat, 06 Jun 2020 01:21:33 UTC +00:00>]
[9] pry(main)> User.find(3)
  User Load (0.2ms)  SELECT "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2  [["id", 3], ["LIMIT", 1]]
=> #<User id: 3, email: "henry@gmail.com", created_at: "2020-06-06 00:19:07", updated_at: "2020-06-06 00:19:07", origin: nil, location: nil, biography: nil, DOB: nil>
[10] pry(main)> henry =_
=> #<User id: 3, email: "henry@gmail.com", created_at: "2020-06-06 00:19:07", updated_at: "2020-06-06 00:19:07", origin: nil, location: nil, biography: nil, DOB: nil>
[11] pry(main)> henry.follows
  Follow Load (0.3ms)  SELECT "follows".* FROM "follows" WHERE "follows"."record_id" = $1 AND "follows"."record_type" = $2  [["record_id", 3], ["record_type", "User"]]
=> []
[12] pry(main)> quit
➜  artbythebrush git:(master) ✗ rails c
Running via Spring preloader in process 19558
Loading development environment (Rails 6.0.3.1)
[1] pry(main)> henry = User.find(3)
  User Load (0.4ms)  SELECT "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2  [["id", 3], ["LIMIT", 1]]
=> #<User id: 3, email: "henry@gmail.com", created_at: "2020-06-06 00:19:07", updated_at: "2020-06-06 00:19:07", origin: nil, location: nil, biography: nil, DOB: nil>
[2] pry(main)> henry.follows
=> #<Follow::ActiveRecord_Associations_CollectionProxy:0x3fd42973917c>
[3] pry(main)> henry.follows.count
   (4.4ms)  SELECT COUNT(*) FROM "follows" WHERE "follows"."user_id" = $1  [["user_id", 3]]
ActiveRecord::StatementInvalid: PG::UndefinedColumn: ERROR:  column follows.user_id does not exist
LINE 1: SELECT COUNT(*) FROM "follows" WHERE "follows"."user_id" = $...
                                             ^

from /Users/henrylay/.rbenv/versions/2.6.6/lib/ruby/gems/2.6.0/gems/activerecord-6.0.3.1/lib/active_record/connection_adapters/postgresql_adapter.rb:675:in `exec_params'
Caused by PG::UndefinedColumn: ERROR:  column follows.user_id does not exist
LINE 1: SELECT COUNT(*) FROM "follows" WHERE "follows"."user_id" = $...
                                             ^

from /Users/henrylay/.rbenv/versions/2.6.6/lib/ruby/gems/2.6.0/gems/activerecord-6.0.3.1/lib/active_record/connection_adapters/postgresql_adapter.rb:675:in `exec_params'
[4] pry(main)> quit
➜  artbythebrush git:(master) ✗ rails c
Running via Spring preloader in process 19682
Loading development environment (Rails 6.0.3.1)
[1] pry(main)> henry = User.find(3)
  User Load (0.4ms)  SELECT "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2  [["id", 3], ["LIMIT", 1]]
=> #<User id: 3, email: "henry@gmail.com", created_at: "2020-06-06 00:19:07", updated_at: "2020-06-06 00:19:07", origin: nil, location: nil, biography: nil, DOB: nil>
[2] pry(main)> henry.follows
  Follow Load (0.4ms)  SELECT "follows".* FROM "follows" WHERE "follows"."record_id" = $1 AND "follows"."record_type" = $2  [["record_id", 3], ["record_type", "User"]]
=> []
[3] pry(main)> User.last.follows
  User Load (0.3ms)  SELECT "users".* FROM "users" ORDER BY "users"."id" DESC LIMIT $1  [["LIMIT", 1]]
  Follow Load (0.2ms)  SELECT "follows".* FROM "follows" WHERE "follows"."record_id" = $1 AND "follows"."record_type" = $2  [["record_id", 6], ["record_type", "User"]]
=> [#<Follow:0x00007fd39e016ac0
  id: 3,
  record_type: "User",
  record_id: 6,
  fan_id: 3,
  created_at: Sat, 06 Jun 2020 01:20:58 UTC +00:00,
  updated_at: Sat, 06 Jun 2020 01:20:58 UTC +00:00>]
[4] pry(main)> User.last.fans
  User Load (0.3ms)  SELECT "users".* FROM "users" ORDER BY "users"."id" DESC LIMIT $1  [["LIMIT", 1]]
  User Load (0.4ms)  SELECT "users".* FROM "users" INNER JOIN "follows" ON "users"."id" = "follows"."fan_id" WHERE "follows"."record_id" = $1 AND "follows"."record_type" = $2  [["record_id", 6], ["record_type", "User"]]
=> [#<User id: 3, email: "henry@gmail.com", created_at: "2020-06-06 00:19:07", updated_at: "2020-06-06 00:19:07", origin: nil, location: nil, biography: nil, DOB: nil>]
[5] pry(main)> User.last.fans
  User Load (0.4ms)  SELECT "users".* FROM "users" ORDER BY "users"."id" DESC LIMIT $1  [["LIMIT", 1]]
  User Load (0.3ms)  SELECT "users".* FROM "users" INNER JOIN "follows" ON "users"."id" = "follows"."fan_id" WHERE "follows"."record_id" = $1 AND "follows"."record_type" = $2  [["record_id", 6], ["record_type", "User"]]
=> [#<User id: 3, email: "henry@gmail.com", created_at: "2020-06-06 00:19:07", updated_at: "2020-06-06 00:19:07", origin: nil, location: nil, biography: nil, DOB: nil>]
[6] pry(main)> Tag.first.fans
  Tag Load (0.3ms)  SELECT "tags".* FROM "tags" ORDER BY "tags"."id" ASC LIMIT $1  [["LIMIT", 1]]
NoMethodError: undefined method `fans' for #<Tag:0x00007fd3951cf1e0>
from /Users/henrylay/.rbenv/versions/2.6.6/lib/ruby/gems/2.6.0/gems/activemodel-6.0.3.1/lib/active_model/attribute_methods.rb:432:in `method_missing'
[7] pry(main)> reload!
Reloading...
=> true
[8] pry(main)> Tag.first.fans
  Tag Load (0.2ms)  SELECT "tags".* FROM "tags" ORDER BY "tags"."id" ASC LIMIT $1  [["LIMIT", 1]]
  User Load (0.3ms)  SELECT "users".* FROM "users" INNER JOIN "follows" ON "users"."id" = "follows"."fan_id" WHERE "follows"."record_id" = $1 AND "follows"."record_type" = $2  [["record_id", 2], ["record_type", "Tag"]]
=> [#<User id: 3, email: "henry@gmail.com", created_at: "2020-06-06 00:19:07", updated_at: "2020-06-06 00:19:07", origin: nil, location: nil, biography: nil, DOB: nil>]
[9] pry(main)> User.first.fans
  User Load (0.2ms)  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1  [["LIMIT", 1]]
  User Load (0.3ms)  SELECT "users".* FROM "users" INNER JOIN "follows" ON "users"."id" = "follows"."fan_id" WHERE "follows"."record_id" = $1 AND "follows"."record_type" = $2  [["record_id", 3], ["record_type", "User"]]
=> []
[10] pry(main)> User.last.fans
  User Load (0.3ms)  SELECT "users".* FROM "users" ORDER BY "users"."id" DESC LIMIT $1  [["LIMIT", 1]]
  User Load (0.3ms)  SELECT "users".* FROM "users" INNER JOIN "follows" ON "users"."id" = "follows"."fan_id" WHERE "follows"."record_id" = $1 AND "follows"."record_type" = $2  [["record_id", 6], ["record_type", "User"]]
=> [#<User id: 3, email: "henry@gmail.com", created_at: "2020-06-06 00:19:07", updated_at: "2020-06-06 00:19:07", origin: nil, location: nil, biography: nil, DOB: nil>]
[11] pry(main)> User.last.follows
  User Load (0.3ms)  SELECT "users".* FROM "users" ORDER BY "users"."id" DESC LIMIT $1  [["LIMIT", 1]]
  Follow Load (0.2ms)  SELECT "follows".* FROM "follows" WHERE "follows"."record_id" = $1 AND "follows"."record_type" = $2  [["record_id", 6], ["record_type", "User"]]
=> [#<Follow:0x00007fd3965621d0
  id: 3,
  record_type: "User",
  record_id: 6,
  fan_id: 3,
  created_at: Sat, 06 Jun 2020 01:20:58 UTC +00:00,
  updated_at: Sat, 06 Jun 2020 01:20:58 UTC +00:00>]
[12] pry(main)> reload!
Reloading...
=> true
[13] pry(main)> henry = User.first
  User Load (0.2ms)  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1  [["LIMIT", 1]]
=> #<User id: 3, email: "henry@gmail.com", created_at: "2020-06-06 00:19:07", updated_at: "2020-06-06 00:19:07", origin: nil, location: nil, biography: nil, DOB: nil>
[14] pry(main)> henry.followed_items
  Follow Load (0.2ms)  SELECT "follows".* FROM "follows" WHERE "follows"."fan_id" = $1  [["fan_id", 3]]
=> [#<Follow:0x00007fd39649a6d0
  id: 3,
  record_type: "User",
  record_id: 6,
  fan_id: 3,
  created_at: Sat, 06 Jun 2020 01:20:58 UTC +00:00,
  updated_at: Sat, 06 Jun 2020 01:20:58 UTC +00:00>,
 #<Follow:0x00007fd3942a70f0
  id: 4,
  record_type: "Tag",
  record_id: 2,
  fan_id: 3,
  created_at: Sat, 06 Jun 2020 01:21:33 UTC +00:00,
  updated_at: Sat, 06 Jun 2020 01:21:33 UTC +00:00>]
[15] pry(main)>
